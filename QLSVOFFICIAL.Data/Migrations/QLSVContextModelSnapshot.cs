// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLSVOFFICIAL.Data.Models;

namespace QLSVOFFICIAL.Data.Migrations
{
    [DbContext(typeof(QLSVContext))]
    partial class QLSVContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.AbsenceForm", b =>
                {
                    b.Property<int>("IdAbsenceForm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdClassSubject")
                        .HasColumnType("int");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.HasKey("IdAbsenceForm")
                        .HasName("PK__ABSENCE___A7FCF44F4DC47F40");

                    b.HasIndex("IdClassSubject");

                    b.HasIndex("IdStudent");

                    b.ToTable("ABSENCE_FORM");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Checkin", b =>
                {
                    b.Property<int>("IdCheckin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CheckRoom")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<DateTime>("CheckinDate")
                        .HasColumnType("datetime");

                    b.Property<int>("IdClassSubject")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("IdCheckin")
                        .HasName("PK__CHECKIN__1AC7AE399E0E9924");

                    b.HasIndex("IdClassSubject");

                    b.HasIndex("IdUser");

                    b.ToTable("CHECKIN");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Class", b =>
                {
                    b.Property<int>("IdClass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int>("IdFaculty")
                        .HasColumnType("int");

                    b.HasKey("IdClass")
                        .HasName("PK__CLASS__003FCC7D1CC198E8");

                    b.HasIndex("IdFaculty");

                    b.HasIndex(new[] { "ClassName" }, "unique_ClassName")
                        .IsUnique();

                    b.ToTable("CLASS");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.ClassSubject", b =>
                {
                    b.Property<int>("IdClassSubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassSubjectName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("DateFinish")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateStrart")
                        .HasColumnType("datetime");

                    b.Property<int>("IdSubject")
                        .HasColumnType("int");

                    b.HasKey("IdClassSubject")
                        .HasName("PK__CLASS_SU__4118476E48A95437");

                    b.HasIndex("IdSubject");

                    b.ToTable("CLASS_SUBJECT");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Faculty", b =>
                {
                    b.Property<int>("IdFaculty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FacultyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdFaculty")
                        .HasName("PK__FACULTY__0D72F2BFC3A486F4");

                    b.HasIndex(new[] { "FacultyCode" }, "unique_FacultyCode")
                        .IsUnique();

                    b.ToTable("FACULTY");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRole")
                        .HasName("PK__ROLE__B43690548B1B0BEC");

                    b.HasIndex(new[] { "RoleName" }, "unique_RoleName")
                        .IsUnique();

                    b.ToTable("ROLE");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Student", b =>
                {
                    b.Property<int>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdClass")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdStudent")
                        .HasName("PK__STUDENT__61B35104D6218243");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdUser");

                    b.ToTable("STUDENT");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.StudentCheckin", b =>
                {
                    b.Property<int>("IdCheckin")
                        .HasColumnType("int");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CheckIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckOut")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("IdCheckin", "IdStudent")
                        .HasName("PK__STUDENT___4CDC9B29D5D84085");

                    b.HasIndex("IdStudent");

                    b.HasIndex("IdUser");

                    b.ToTable("STUDENT_CHECKIN");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.StudentClassSubject", b =>
                {
                    b.Property<int>("IdClassSubject")
                        .HasColumnType("int");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.HasKey("IdClassSubject", "IdStudent")
                        .HasName("PK__STUDENT___1703727E0184EA17");

                    b.HasIndex("IdStudent");

                    b.ToTable("STUDENT_CLASS_SUBJECT");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Subject", b =>
                {
                    b.Property<int>("IdSubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdFaculty")
                        .HasColumnType("int");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdSubject")
                        .HasName("PK__SUBJECT__BD949FF5026CD2E9");

                    b.HasIndex("IdFaculty");

                    b.HasIndex(new[] { "SubjectName" }, "unique_SubjectName")
                        .IsUnique();

                    b.ToTable("SUBJECT");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdFaculty")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdUser")
                        .HasName("PK__USER__B7C92638436CC53C");

                    b.HasIndex("IdFaculty");

                    b.HasIndex("IdRole");

                    b.HasIndex(new[] { "UserName" }, "unique_UserName")
                        .IsUnique();

                    b.ToTable("USER");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.AbsenceForm", b =>
                {
                    b.HasOne("QLSVOFFICIAL.Data.Models.ClassSubject", "IdClassSubjectNavigation")
                        .WithMany("AbsenceForms")
                        .HasForeignKey("IdClassSubject")
                        .HasConstraintName("FK_ABSENCE_FORM_CLASS_SUBJECT")
                        .IsRequired();

                    b.HasOne("QLSVOFFICIAL.Data.Models.Student", "IdStudentNavigation")
                        .WithMany("AbsenceForms")
                        .HasForeignKey("IdStudent")
                        .HasConstraintName("FK_ABSENCE_FORM_STUDENT")
                        .IsRequired();

                    b.Navigation("IdClassSubjectNavigation");

                    b.Navigation("IdStudentNavigation");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Checkin", b =>
                {
                    b.HasOne("QLSVOFFICIAL.Data.Models.ClassSubject", "IdClassSubjectNavigation")
                        .WithMany("Checkins")
                        .HasForeignKey("IdClassSubject")
                        .HasConstraintName("FK_CHECKIN_CLASS_SUBJECT")
                        .IsRequired();

                    b.HasOne("QLSVOFFICIAL.Data.Models.User", "IdUserNavigation")
                        .WithMany("Checkins")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK_CHECKIN_USER")
                        .IsRequired();

                    b.Navigation("IdClassSubjectNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Class", b =>
                {
                    b.HasOne("QLSVOFFICIAL.Data.Models.Faculty", "IdFacultyNavigation")
                        .WithMany("Classes")
                        .HasForeignKey("IdFaculty")
                        .HasConstraintName("FK_CLASS_FACULTY")
                        .IsRequired();

                    b.Navigation("IdFacultyNavigation");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.ClassSubject", b =>
                {
                    b.HasOne("QLSVOFFICIAL.Data.Models.Subject", "IdSubjectNavigation")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("IdSubject")
                        .HasConstraintName("FK_CLASS_SUBJECT_SUBJECT")
                        .IsRequired();

                    b.Navigation("IdSubjectNavigation");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Student", b =>
                {
                    b.HasOne("QLSVOFFICIAL.Data.Models.Class", "IdClassNavigation")
                        .WithMany("Students")
                        .HasForeignKey("IdClass")
                        .HasConstraintName("FK_STUDENT_CLASS")
                        .IsRequired();

                    b.HasOne("QLSVOFFICIAL.Data.Models.User", "IdUserNavigation")
                        .WithMany("Students")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK_STUDENT_USER")
                        .IsRequired();

                    b.Navigation("IdClassNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.StudentCheckin", b =>
                {
                    b.HasOne("QLSVOFFICIAL.Data.Models.Checkin", "IdChekinNavigation")
                        .WithMany("StudentCheckins")
                        .HasForeignKey("IdCheckin")
                        .HasConstraintName("FK_STUDENT_CHEKIN_CHECKIN")
                        .IsRequired();

                    b.HasOne("QLSVOFFICIAL.Data.Models.Student", "IdStudentNavigation")
                        .WithMany("StudentCheckins")
                        .HasForeignKey("IdStudent")
                        .HasConstraintName("FK_STUDENT_CHEKIN_STUDENT")
                        .IsRequired();

                    b.HasOne("QLSVOFFICIAL.Data.Models.User", "IdUserNavigation")
                        .WithMany("StudentCheckins")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK_STUDENT_CHEKIN_USER")
                        .IsRequired();

                    b.Navigation("IdChekinNavigation");

                    b.Navigation("IdStudentNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.StudentClassSubject", b =>
                {
                    b.HasOne("QLSVOFFICIAL.Data.Models.ClassSubject", "IdClassSubjectNavigation")
                        .WithMany("StudentClassSubjects")
                        .HasForeignKey("IdClassSubject")
                        .HasConstraintName("FK_STUDENT_CLASS_SUBJECT_CLASS_SUBJECT")
                        .IsRequired();

                    b.HasOne("QLSVOFFICIAL.Data.Models.Student", "IdStudentNavigation")
                        .WithMany("StudentClassSubjects")
                        .HasForeignKey("IdStudent")
                        .HasConstraintName("FK_STUDENT_CLASS_SUBJECT_STUDENT")
                        .IsRequired();

                    b.Navigation("IdClassSubjectNavigation");

                    b.Navigation("IdStudentNavigation");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Subject", b =>
                {
                    b.HasOne("QLSVOFFICIAL.Data.Models.Faculty", "IdFacultyNavigation")
                        .WithMany("Subjects")
                        .HasForeignKey("IdFaculty")
                        .HasConstraintName("FK_SUBJECT_FACULTY")
                        .IsRequired();

                    b.Navigation("IdFacultyNavigation");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.User", b =>
                {
                    b.HasOne("QLSVOFFICIAL.Data.Models.Faculty", "IdFacultyNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdFaculty")
                        .HasConstraintName("FK_USER_FACULTY")
                        .IsRequired();

                    b.HasOne("QLSVOFFICIAL.Data.Models.Role", "IdRoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .HasConstraintName("FK_USER_ROLE")
                        .IsRequired();

                    b.Navigation("IdFacultyNavigation");

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Checkin", b =>
                {
                    b.Navigation("StudentCheckins");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.ClassSubject", b =>
                {
                    b.Navigation("AbsenceForms");

                    b.Navigation("Checkins");

                    b.Navigation("StudentClassSubjects");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Faculty", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Subjects");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Student", b =>
                {
                    b.Navigation("AbsenceForms");

                    b.Navigation("StudentCheckins");

                    b.Navigation("StudentClassSubjects");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.Subject", b =>
                {
                    b.Navigation("ClassSubjects");
                });

            modelBuilder.Entity("QLSVOFFICIAL.Data.Models.User", b =>
                {
                    b.Navigation("Checkins");

                    b.Navigation("StudentCheckins");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
